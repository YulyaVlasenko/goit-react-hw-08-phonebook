{"version":3,"file":"static/js/739.36d71a4c.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/ContactForm/ContactForm.styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactListItems/ContactListItems.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/EditForm/EditForm.styled.js","components/EditForm/EditForm.jsx","components/ContactListItems/ContactListItems.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n  max-width: 696px;\n  padding-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  border-right: 2px solid rgb(156 72 35);\n  border-bottom: 2px solid rgb(156 72 35);\n  border-left: 2px solid rgb(156 72 35);\n`;\n\nexport const Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: 32px;\n  padding-top: 20px;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n","import * as s from './Section.styled';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => (\n  <s.Section>\n    <s.Container>\n      {title && <s.SectionTitle>{title}</s.SectionTitle>}\n      {children}\n    </s.Container>\n  </s.Section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding: 10px;\n  margin-top: 20px;\n  border: 2px solid rgb(34 155 15);\n  border-radius: 4px;\n  button {\n    padding: 4px 8px;\n    font-size: 14px;\n    color: rgb(34 155 15);\n    font-weight: bold;\n    border: 1px solid rgb(34 155 15);\n    border-radius: 4px;\n    cursor: pointer;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.12) 0px 0px 1px, rgba(0, 0, 0, 0.14) 0px 0px 1px,\n      rgba(0, 0, 0, 0.2) 0px 1px 0px;\n    &:active {\n      background-color: rgb(34 155 15);\n      color: #ffffff;\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  font-size: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  input {\n    max-width: 550px;\n    padding: 4px;\n    margin-top: 6px;\n    border: 1px solid rgb(34 155 15);\n    border-radius: 4px;\n    &:focus {\n      border-color: rgb(99, 149, 241, 0.6);\n      outline: 2px rgba(99, 149, 241, 0.6);\n      outline-style: solid;\n    }\n  }\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectUsers = state => state.contactsUser.contacts.items;\n\nexport const selectFilter = state => state.filterUser.filter;\n\nexport const selectIsLoading = state => state.contactsUser.contacts.isLoading;\n\nexport const selectError = state => state.contactsUser.contacts.error;\n\nexport const selectUsersQuantity = state =>\n  state.contactsUser.contacts.items.length;\n\nexport const selectVisibleUsers = createSelector(\n  [selectUsers, selectFilter],\n  (users, filter) => {\n    return users.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport * as s from './ContactForm.styled';\nimport { addContact } from 'redux/operations';\nimport { selectUsers } from 'redux/selectors';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const users = useSelector(selectUsers);\n\n  const handleCange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const isDuplicateUser = users.some(\n    contact => contact.name.toLowerCase() === name.toLowerCase()\n  );\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (isDuplicateUser) {\n      alert('This name is already in the contacts list.');\n      reset();\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <s.Form onSubmit={handleSubmit}>\n      <s.Label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. \n            For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleCange}\n        />\n      </s.Label>\n\n      <s.Label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleCange}\n        />\n      </s.Label>\n\n      <button type=\"submit\">Add contact</button>\n    </s.Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ButtonDel = styled.button`\n  margin-left: 10px;\n  padding: 4px 8px;\n  font-size: 14px;\n  color: rgb(245 29 29);\n  font-weight: bold;\n  border: 1px solid rgb(245 29 29);\n  border-radius: 4px;\n  cursor: pointer;\n  background-color: white;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 0px 1px, rgba(0, 0, 0, 0.14) 0px 0px 1px,\n    rgba(0, 0, 0, 0.2) 0px 1px 0px;\n  &:active {\n    background-color: rgb(245 29 29);\n    color: #ffffff;\n  }\n`;\n\nexport const Name = styled.p`\n  font-size: 18px;\n  margin-left: 10px;\n`;\n\nexport const Number = styled.p`\n  font-size: 18px;\n  margin-left: 5px;\n`;\n\nexport const ButtonEdit = styled.button`\n  margin-left: 10px;\n  padding: 4px 8px;\n  font-size: 14px;\n  color: rgb(34 155 15);\n  font-weight: bold;\n  border: 1px solid rgb(34 155 15);\n  border-radius: 4px;\n  cursor: pointer;\n  background-color: white;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 0px 1px, rgba(0, 0, 0, 0.14) 0px 0px 1px,\n    rgba(0, 0, 0, 0.2) 0px 1px 0px;\n  &:active {\n    background-color: rgb(34 155 15);\n    color: #ffffff;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const Modal = styled.div`\n  width: 500px;\n  background-color: #ffff;\n  padding: 20px;\n  border: 2px solid rgb(156 72 35);\n  border-radius: 4px;\n`;\n\nexport const CloseButton = styled.button`\n  padding: 4px 8px;\n  font-size: 14px;\n  color: rgb(245 29 29);\n  font-weight: bold;\n  border: 1px solid rgb(245 29 29);\n  border-radius: 4px;\n  cursor: pointer;\n  background-color: white;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 0px 1px, rgba(0, 0, 0, 0.14) 0px 0px 1px,\n    rgba(0, 0, 0, 0.2) 0px 1px 0px;\n  &:active {\n    background-color: rgb(245 29 29);\n    color: #ffffff;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 28px;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nexport const ThumbButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n`;\n","import { useEffect } from 'react';\nimport * as s from './Modal.styled';\nimport PropTypes from 'prop-types';\n\nexport default function Modal({ title, closeModal, children }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      closeModal();\n    }\n  };\n\n  const handleBackdropClick = evt => {\n    if (evt.currentTarget === evt.target) {\n      closeModal();\n    }\n  };\n\n  return (\n    <s.Overlay onClick={handleBackdropClick}>\n      <s.Modal>\n        {title && <s.Title>{title}</s.Title>}\n        {children}\n        <s.ThumbButton>\n          <s.CloseButton type=\"button\" onClick={closeModal}>\n            Cancel\n          </s.CloseButton>\n        </s.ThumbButton>\n      </s.Modal>\n    </s.Overlay>\n  );\n}\n\nModal.propTypes = {\n  title: PropTypes.string,\n  closeModal: PropTypes.func.isRequired,\n  children: PropTypes.any.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding: 10px;\n  border: 2px solid rgb(34 155 15);\n  border-radius: 4px;\n  button {\n    padding: 4px 8px;\n    font-size: 14px;\n    color: rgb(34 155 15);\n    font-weight: bold;\n    border: 1px solid rgb(34 155 15);\n    border-radius: 4px;\n    cursor: pointer;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.12) 0px 0px 1px, rgba(0, 0, 0, 0.14) 0px 0px 1px,\n      rgba(0, 0, 0, 0.2) 0px 1px 0px;\n    &:active {\n      background-color: rgb(34 155 15);\n      color: #ffffff;\n    }\n    &:disabled {\n      background-color: lightgray;\n      cursor: not-allowed;\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  font-size: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  input {\n    max-width: 450px;\n    padding: 4px;\n    margin-top: 6px;\n    border: 1px solid rgb(34 155 15);\n    border-radius: 4px;\n    &:focus {\n      border-color: rgb(99, 149, 241, 0.6);\n      outline: 2px rgba(99, 149, 241, 0.6);\n      outline-style: solid;\n    }\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { editContact } from 'redux/operations';\nimport { selectUsers } from 'redux/selectors';\nimport * as s from './EditForm.styled';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nexport const EditForm = ({ editName, editNumber, id, closeModal }) => {\n  const [name, setName] = useState(editName);\n  const [number, setNumber] = useState(editNumber);\n  const [buttonDisabled, setbuttonDisabled] = useState(true);\n  const dispatch = useDispatch();\n  const users = useSelector(selectUsers);\n\n  const handleCange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n    if (name !== editName || number !== editNumber) {\n      setbuttonDisabled(false);\n    }\n  };\n\n  const isDuplicateEditUser = users.some(\n    contact => contact.name.toLowerCase() === name.toLowerCase()\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isDuplicateEditUser) {\n      Notify.failure('Such a name already exists! When changing the number, you must change the name!');\n      return;\n    }\n\n    dispatch(editContact({ name, number, id }));\n    reset();\n    closeModal();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <s.Form onSubmit={handleSubmit}>\n      <s.Label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          required\n          value={name}\n          onChange={handleCange}\n        />\n      </s.Label>\n\n      <s.Label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          required\n          value={number}\n          onChange={handleCange}\n        />\n      </s.Label>\n\n      <button disabled={buttonDisabled} type=\"submit\">\n        Change\n      </button>\n    </s.Form>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport * as s from './ContactListItems.styled';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/operations';\nimport { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport { EditForm } from 'components/EditForm/EditForm';\n\nexport const ContactListItems = ({ user: { name, number, id } }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  const [isShowModal, setIsShowModal] = useState(false);\n\n  const showModal = () => {\n    setIsShowModal(true);\n  };\n\n  const closeModal = () => {\n    setIsShowModal(false);\n  };\n\n  return (\n    <>\n      <s.ButtonEdit onClick={showModal}>Edit</s.ButtonEdit>\n      <s.Name>{name}:</s.Name>\n      <s.Number>{number}</s.Number>\n      <s.ButtonDel onClick={handleDelete}>Delete</s.ButtonDel>\n      {isShowModal && (\n        <Modal title=\"Edit contact\" closeModal={closeModal}>\n          <EditForm\n            editName={name}\n            editNumber={number}\n            id={id}\n            closeModal={closeModal}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nContactListItems.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 15px;\n`;\n\nexport const ListItems = styled.li`\n  padding: 5px;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  &::before {\n    content: '';\n    background: black;\n    width: 6px;\n    height: 6px;\n    border-radius: 100%;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { ContactListItems } from '../ContactListItems/ContactListItems';\nimport * as s from './ContactList.styled';\nimport { selectVisibleUsers } from 'redux/selectors';\n\nexport const ContactList = () => {\n  const searchUser = useSelector(selectVisibleUsers);\n\n  return (\n    <s.List>\n      {searchUser.map(user => (\n        <s.ListItems key={user.id}>\n          <ContactListItems user={user} />\n        </s.ListItems>\n      ))}\n    </s.List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Description = styled.p`\n  font-weight: bold;\n  font-size: 18px;\n  margin-top: 20px;\n`;\n\nexport const Input = styled.input`\n  max-width: 100%;\n  padding: 4px;\n  margin-top: 6px;\n  border: 1px solid rgb(0 0 0);\n  border-radius: 4px;\n  &:focus {\n    border-color: rgb(99, 149, 241, 0.6);\n    outline: 2px rgba(99, 149, 241, 0.6);\n    outline-style: solid;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport * as s from './Filter.styled';\nimport { handleCangeFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <>\n      <s.Description>Find contacts by name</s.Description>\n      <s.Input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. \n          For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        value={filter}\n        onChange={e => dispatch(handleCangeFilter(e.target.value.trim()))}\n      />\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport {\n  selectUsersQuantity,\n  selectError,\n  selectIsLoading,\n} from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { Section } from 'components/Section/Section';\n\nexport default function Contacts() {\n  const usersQuantity = useSelector(selectUsersQuantity);\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Section title=\"Add new contact\">\n        <ContactForm />\n      </Section>\n      {isLoading && !error && Loading.arrows()}\n      {!isLoading && Loading.remove()}\n      {usersQuantity > 0 && (\n        <Section title=\"Your contacts\">\n          <Filter />\n          <ContactList />\n        </Section>\n      )}\n    </>\n  );\n}\n"],"names":["Section","styled","Container","SectionTitle","title","children","Form","Label","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectUsers","state","contactsUser","contacts","items","selectFilter","filterUser","filter","selectIsLoading","isLoading","selectError","error","selectUsersQuantity","selectVisibleUsers","users","contact","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","handleCange","evt","target","isDuplicateUser","useSelector","some","reset","onSubmit","event","preventDefault","alert","addContact","type","pattern","required","onChange","ButtonDel","Name","Number","ButtonEdit","Overlay","Modal","CloseButton","Title","ThumbButton","closeModal","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","onClick","currentTarget","EditForm","editName","editNumber","id","buttonDisabled","setbuttonDisabled","isDuplicateEditUser","Notify","editContact","disabled","ContactListItems","user","isShowModal","setIsShowModal","deleteContact","List","ListItems","ContactList","searchUser","Description","Input","Filter","handleCangeFilter","trim","Contacts","usersQuantity","fetchContacts","Helmet","Loading"],"sourceRoot":""}